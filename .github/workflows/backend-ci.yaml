name: ci-backend

# Ensure the workflow runs on schedule (Sunday at 0:00) and on push to the main branch
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - starter/backend/**
  
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - name: Checkout code
        uses: actions/checkout@v3
      # Set up a Python environment using the specified node version.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:  
          python-version: '3.10'
      # Dependencies
      - name: dependencies
        run: cd starter/backend && pip install pipenv && pipenv install
      # lint
      - name: linter pip env
        run: cd starter/backend && pipenv run lint
      # Run the linter.
      - name: linter
        uses: advanced-security/python-lint-code-scanning-action@v1
        with:
          linter: pylint

  test:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - name: Checkout code
        uses: actions/checkout@v3
      # Set up a python environment using the specified node version.
      - name: Set up Python
        uses: actions/setup-python@v4
        with:  
          python-version: '3.10'
      # Install the dependencies.
      - name: dependencies
        run: cd starter/backend && pip install pipenv && pipenv install
      # Run the tests.
      - name: test
        run: cd starter/backend/ && pipenv run test
      # run test fail
      - name: test-fail
        env:
          FAIL_TEST: true
        run: cd starter/backend && pipenv run test
        continue-on-error: true

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - name: Checkout code
        uses: actions/checkout@v3
      # Set up a python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:  
          python-version: '3.10'
      # Install the dependencies.
      - name: dependencies
        run: cd starter/backend && pip install pipenv && pipenv install
      # Run the tests.
      - name: test
        run: cd starter/backend/ && pipenv run test
      # run test fail
      - name: test-fail
        env:
          FAIL_TEST: true
        run: cd starter/backend && pipenv run test
        continue-on-error: true
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: starter/backend/.
          push: False